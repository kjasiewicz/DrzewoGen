@using System.Web.Optimization
@model Db4o_lab2.ViewModels.CreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Dodaj nową osobę</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="birthDatePicker">
            @Html.LabelFor(model => model.BirthDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", placeholder="mm/dd/yyyy",id="birthdatepickertxt" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group" id="deathDatePicker">
            @Html.LabelFor(model => model.DeatDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeatDate, new { htmlAttributes = new { @class = "form-control", placeholder = "mm/dd/yyyy" } })
                @Html.ValidationMessageFor(model => model.DeatDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FatherName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FatherName, (List<SelectListItem>)ViewBag.FatherList, new { @class = "form-control", disabled = true, id = "fatherInput" })
                @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MotherName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MotherName, (List<SelectListItem>)ViewBag.MotherList, new { @class = "form-control", disabled = true, id = "motherInput" })
                @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Sex, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MotherName, (List<SelectListItem>)ViewBag.SexList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Stwórz" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@Scripts.Render("~/Scripts/site.js")
